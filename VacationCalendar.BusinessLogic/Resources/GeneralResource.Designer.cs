//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace VacationCalendar.BusinessLogic.Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class GeneralResource {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal GeneralResource() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("VacationCalendar.BusinessLogic.Resources.GeneralResource", typeof(GeneralResource).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {PropertyName} date has to be set earlier than {ComparisonValue}..
        /// </summary>
        public static string ErrorMessage_EarlierThan_Fluent {
            get {
                return ResourceManager.GetString("ErrorMessage_EarlierThan_Fluent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {PropertyName} has to be greater than {ComparisonValue}..
        /// </summary>
        public static string ErrorMessage_GreaterThan_Fluent {
            get {
                return ResourceManager.GetString("ErrorMessage_GreaterThan_Fluent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {PropertyName} can only contain only letters..
        /// </summary>
        public static string ErrorMessage_InvalidFormatLettersOnly_Fluent {
            get {
                return ResourceManager.GetString("ErrorMessage_InvalidFormatLettersOnly_Fluent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} date has to be set later than or equal to {1}..
        /// </summary>
        public static string ErrorMessage_LaterThanOrEqualTo {
            get {
                return ResourceManager.GetString("ErrorMessage_LaterThanOrEqualTo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {PropertyName} date has to be set later than or equal to {ComparisonValue}..
        /// </summary>
        public static string ErrorMessage_LaterThanOrEqualTo_Fluent {
            get {
                return ResourceManager.GetString("ErrorMessage_LaterThanOrEqualTo_Fluent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {PropertyName} date has to be set later than today..
        /// </summary>
        public static string ErrorMessage_LaterThanToday_Fluent {
            get {
                return ResourceManager.GetString("ErrorMessage_LaterThanToday_Fluent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {PropertyName} has to be less than or equal to {ComparisonValue}..
        /// </summary>
        public static string ErrorMessage_LessThanOrEqualTo_Fluent {
            get {
                return ResourceManager.GetString("ErrorMessage_LessThanOrEqualTo_Fluent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {PropertyName} must be less than {MaxLength} characters..
        /// </summary>
        public static string ErrorMessage_MaximumLength_Fluent {
            get {
                return ResourceManager.GetString("ErrorMessage_MaximumLength_Fluent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {PropertyName} is required..
        /// </summary>
        public static string ErrorMessage_Required_Fluent {
            get {
                return ResourceManager.GetString("ErrorMessage_Required_Fluent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Vacation period overlaps other vacation period of {0} {1}..
        /// </summary>
        public static string ErrorMessage_VacationPeriod_Overlaps {
            get {
                return ResourceManager.GetString("ErrorMessage_VacationPeriod_Overlaps", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Something went wrong..
        /// </summary>
        public static string Something_Went_Wrong {
            get {
                return ResourceManager.GetString("Something_Went_Wrong", resourceCulture);
            }
        }
    }
}
